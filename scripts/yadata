#!/usr/bin/env python3

import sys
import argparse
try:
    import _yadata_types
except ModuleNotFoundError:
   print('Error: _yadata_types module must be present',file=sys.stderr)
   sys.exit(1)

import yadata.command
import yadata.utils.sane_yaml as sane_yaml

c_map={
    'read':yadata.command.Read,
    'append':yadata.command.Append,
    'filter':yadata.command.Filter,
    'exec':yadata.command.Exec,
    'merge':yadata.command.Merge,
    'sort':yadata.command.Sort,
    'render':yadata.command.Render,
    'type':yadata.command.Type,
}

parse=argparse.ArgumentParser()
subparsers=parse.add_subparsers(dest='command',help='The yacite subcommand you want to run')
subparsers.required=True
for cmd in c_map:
    cmd_class=c_map[cmd]
    subpar=subparsers.add_parser(cmd,help=cmd_class.__doc__)
    cmd_class.add_arguments(subpar)
ns=parse.parse_args()
command=c_map[ns.command](ns)
if command.data_in:
    out=command.execute(sane_yaml.load_all(sys.stdin))
else:
    out=command.execute()
if command.data_out:
    for rec in out:
        sys.stdout.write('---\n')
        sys.stdout.write(sane_yaml.dump(rec))




